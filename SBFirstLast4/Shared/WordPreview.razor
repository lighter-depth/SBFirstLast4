@page "/word-preview"
@inject IJSRuntime JSRuntime

@try
{
	@if (string.IsNullOrWhiteSpace(WordName))
	{
		<p id="types"></p>
	}

	else
	{
		<p id="types" style="opacity: 0.6;">
			<div id="preview">
				@if (FirstChar != default && WordName.At(0) != FirstChar)
				{
					<div class="types-char">@FirstChar</div>

					<div class="pre-message">ではじめてね</div>
				}
				else if (WordName.GetLastChar() == 'ん')
				{
					<div class="types-char">ん</div>

					<div class="pre-message">でおわってるよ</div>
				}
				else if (Types.Count < 1)
				{
					<div class="types1">
						<div class="type">
							<div class="icon" style="height: 50px;"></div><br>
							<span>無属性</span>
						</div>
					</div>
					<div class="pre-message">@ToString(Effective)</div>
				}
				else if (Types.Count == 1)
				{
					<div class="types1">
						<div class="type">
							<img class="icon" src=@Types.At(0).TypeToImg()><br>
							<span>@Types.At(0).TypeToString()</span>
						</div>
					</div>
					<div class="pre-message">@ToString(Effective)</div>
				}
				else if (Types.Count > 1)
				{
					<div class="types2">
						<div class="type">
							<img class="icon" src=@Types.At(0).TypeToImg()><br>
							<span>@Types.At(0).TypeToString()</span>
						</div>
						<div class="type">
							<img class="icon" src=@Types.At(1).TypeToImg()><br>
							<span>@Types.At(1).TypeToString()</span>
						</div>
					</div>
					<div class="pre-message">@ToString(Effective)</div>
				}
			</div>
		</p>
	}

}
catch (Exception ex)
{
	JSRuntime.AlertEx(ex);
}
@code {
	[Parameter]
	public List<WordType> Types { get; set; } = new();

	[Parameter]
	public string WordName { get; set; } = string.Empty;

	[Parameter]
	public DamageType Effective { get; set; } = DamageType.MidDamage;

	[Parameter]
	public char FirstChar { get; set; }

	public enum DamageType
	{
		NoDamage, NonEffective, MidDamage, Effective, Heal
	}

	internal static string ToString(DamageType damageType) => damageType switch
	{
		DamageType.NoDamage => "こうかなし",
		DamageType.NonEffective => "いまひとつ",
		DamageType.MidDamage => "ふつうのダメージ",
		DamageType.Effective => "こうかばつぐん",
		_ => "かいふく"
	};
}
