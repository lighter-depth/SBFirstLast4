@page "/debug"
@using System.Diagnostics
@using System.Diagnostics.CodeAnalysis
@using SpawnDev.BlazorJS.WebWorkers
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject HttpClient Http
@inject IWordLoaderService WordLoader

<button @onclick=TestBtn_OnClick>Test!</button>
<br />

@Message

<br />

@WorkerTimeElapsed

<br />

@BlockingTimeElapsed


@code {

	private string Message = string.Empty;

	private string WorkerTimeElapsed = string.Empty;

	private string BlockingTimeElapsed = string.Empty;


	private async Task Progress(string msg)
	{
		Message = msg;
		StateHasChanged();
		await Task.Delay(1);
	}

	private async Task TestBtn_OnClick()
	{
		Words.NoTypeWords.Clear();

		await JSRuntime.Alert("Running...");
		var sw = new Stopwatch();

		sw.Restart();

		for (var i = 0; i < 6; i++)
		{
			var localParameter = i;
			await Progress($"タイプレス ワードを読み込んでいます... ({i}/5) Count: {Words.NoTypeWords.Count}");
			await WordLoader.LoadTL(localParameter, Http);
		}

		sw.Stop();
		await JSRuntime.Alert($"Done! Count: {Words.NoTypeWords.Count}");

		WorkerTimeElapsed = sw.Elapsed.ToString();
		StateHasChanged();
	}
}

.